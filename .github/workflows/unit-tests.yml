name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'Docs/**'       # Docs folder in root of repo
      - '**/*.md'       # .md files anywhere in the repo
      - '**/LICENSE'    # LICENSE files anywhere in the repo
      - '**/.gitignore' # .gitignore files anywhere in the repo
      
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'Docs/**'       # Docs folder in root of repo
      - '**/*.md'       # .md files anywhere in the repo
      - '**/LICENSE'    # LICENSE files anywhere in the repo
      - '**/.gitignore' # .gitignore files anywhere in the repo
      
  workflow_dispatch:
    branches: [ main ]
    
jobs: 
  macOS:
    name: macOS
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - name: Build (macOS)
      run: xcodebuild build -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "OTCore-CI" -destination "platform=macOS,arch=x86_64"
    - name: Run Tests (macOS)
      run: xcodebuild test -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "OTCore-CI" -destination "platform=macOS,arch=x86_64"
    - name: Build (macCatalyst)
      run: xcodebuild build -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "OTCore-CI" -destination "platform=macOS,variant=Mac Catalyst,arch=x86_64"
    - name: Run Tests (macCatalyst)
      run: xcodebuild test -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "OTCore-CI" -destination "platform=macOS,variant=Mac Catalyst,arch=x86_64"

  iOS:
    name: iOS
    runs-on: macos-latest # this must be macos, GitHub does not offer iOS; we then use xcodebuild to test
    steps:
    - uses: actions/checkout@main
    - name: Build (iPhone 12)
      run: xcodebuild build -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "OTCore-CI" -destination "platform=iOS Simulator,name=iPhone 12"
    - name: Run Tests (iPhone 12)
      run: xcodebuild test -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "OTCore-CI" -destination "platform=iOS Simulator,name=iPhone 12"

  tvOS:
    name: tvOS
    runs-on: macos-latest # this must be macos, GitHub does not offer tvOS; we then use xcodebuild to test
    steps:
    - uses: actions/checkout@main
    - name: Build (Apple TV)
      run: xcodebuild build -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "OTCore-CI" -destination "platform=tvOS Simulator,name=Apple TV"
    - name: Run Tests (Apple TV)
      run: xcodebuild test -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "OTCore-CI" -destination "platform=tvOS Simulator,name=Apple TV"


# xcodebuild test reference:
# https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/testing_with_xcode/chapters/08-automation.html
